import argparse
from scr.base_function import check_version, check_csv_data
from scr.products import export_products, download_supplier_price_list, process_supplier_1_price_list, \
                        process_supplier_2_price_list, process_supplier_3_price_list, process_and_combine_all_data, \
                        prepare_for_website_upload, update_products
from scr.suppliers_1 import find_new_products, find_product_data, parse_product_attributes, apply_final_standardization, \
                        fill_product_category, refill_product_category, separate_existing_products, assign_new_sku_to_products, \
                        download_images_for_product, create_new_products_import_file, update_existing_products_batch


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞ —Ç–∞ –∑–∞–ø—É—Å–∫—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π.
    """
    # 1. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞—Ä—Å–µ—Ä–∞
    parser = argparse.ArgumentParser(description="–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è WooCommerce.")
    
    # 2. –î–æ–¥–∞–≤–∞–Ω–Ω—è –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
    parser.add_argument(
        "--export", 
        action="store_true", 
        help="–ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏ –º–∞–≥–∞–∑–∏–Ω—É —É CSV —Ñ–∞–π–ª."
    )
    parser.add_argument(
        "--check-version", 
        action="store_true", 
        help="–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤–µ—Ä—Å—ñ—é WooCommerce REST API."
    )

    # –û–Ω–æ–≤–ª–µ–Ω–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ CSV
    parser.add_argument(
        "--check-csv",
        type=str,
        help="–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ CSV-—Ñ–∞–π–ª –∑–∞ ID –ø—Ä–æ—Ñ—ñ–ª—é (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, '1')."
    )

    parser.add_argument(
        "--download-supplier",
        nargs="?",
        const=1,  # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º ID –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ = 1
        type=int,
        help="–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç –≤—ñ–¥ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ –∑–∞ –π–æ–≥–æ ID (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, --download-supplier 1)."
    )

    parser.add_argument(
        "--process-supplier-1",
        action="store_true",
        help="–û–±—Ä–æ–±–∫–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –¥–ª—è –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ 1."
    )

    parser.add_argument(
        "--process-supplier-2",
        action="store_true",
        help="–û–±—Ä–æ–±–∫–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –¥–ª—è –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ 2."
    )

    parser.add_argument(
        "--process-supplier-3",
        action="store_true",
        help="–û–±—Ä–æ–±–∫–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –¥–ª—è –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ 3 (–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è .xls –≤ .csv)."
    )

    parser.add_argument(
        "--combine-tables",
        action="store_true",
        help="–û–±'—î–¥–Ω–∞—Ç–∏ –≤—Å—ñ –ø—Ä–∞–π—Å–∏ —Ç–∞ –∑–∞–ª–∏—à–∫–∏ –≤ –æ–¥–Ω—É –∑–≤–µ–¥–µ–Ω—É —Ç–∞–±–ª–∏—Ü—é."
    )
    # –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ñ–∞–π–ª—É –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    parser.add_argument(
        "--prepare-upload",
        action="store_true",
        help="–ü—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç."
    )
    # –î–æ–¥–∞–Ω–æ –Ω–æ–≤–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤
    parser.add_argument(    
        "--update-products", 
        type=int, 
        choices=[1, 2],
        help="–ó–∞–ø—É—Å—Ç—ñ—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤: 1 –¥–ª—è –∑–∞–ª–∏—à–∫—ñ–≤/—Ü—ñ–Ω, 2 –¥–ª—è –∞–∫—Ü—ñ–π.")

    # ‚ú® –ù–æ–≤–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è –ø–æ—à—É–∫—É –Ω–æ–≤–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
    parser.add_argument(
        "--find-new-products",
        action="store_true",
        help="–ó–Ω–∞–π—Ç–∏ –Ω–æ–≤—ñ —Ç–æ–≤–∞—Ä–∏ —É –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞—Ö, —è–∫–∏—Ö –Ω–µ–º–∞—î –Ω–∞ —Å–∞–π—Ç—ñ."
    )

    # ‚ú® –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è –ø–æ—à—É–∫—É –¥–∞–Ω–∏—Ö –ø—Ä–æ —Ç–æ–≤–∞—Ä
    parser.add_argument(
        "--find-product-data",
        action="store_true",
        help="–ó–Ω–∞–π—Ç–∏ URL, —à—Ç—Ä–∏—Ö-–∫–æ–¥ —Ç–∞ –∞—Ç—Ä–∏–±—É—Ç–∏ –¥–ª—è –Ω–æ–≤–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤."
    )


    parser.add_argument(
        "--parse-attributes",
        action="store_true",
        help="–ü–∞—Ä—Å–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è –≤–∏–ª—É—á–µ–Ω–Ω—è –∞—Ç—Ä–∏–±—É—Ç—ñ–≤."
    )

    # === –ù–û–í–ò–ô –ê–†–ì–£–ú–ï–ù–¢ –¥–ª—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ—ó —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü—ñ—ó ===
    parser.add_argument(
        "--standardize-final",
        action="store_true",
        help="–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ —Ñ—ñ–Ω–∞–ª—å–Ω—ñ –ø—Ä–∞–≤–∏–ª–∞ –∑–∞–º—ñ–Ω–∏ –∑ attribute.csv –¥–æ SL_new.csv."
    )

    # ‚ú® –ù–û–í–ò–ô –ê–†–ì–£–ú–ï–ù–¢ –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    parser.add_argument(
        "--fill-categories",
        action="store_true",
        help="–ó–∞–ø–æ–≤–Ω–∏—Ç–∏ –∫–æ–ª–æ–Ω–∫—É Q (–ö–∞—Ç–µ–≥–æ—Ä—ñ—è) –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π M, N, O —Ç–∞ category.csv."
    )

    # ‚ú® –ù–û–í–ò–ô –ê–†–ì–£–ú–ï–ù–¢ –¥–ª—è –ü–û–í–¢–û–†–ù–û–ì–û –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    parser.add_argument( # <--- –î–û–î–ê–ù–û
        "--refill-category",
        action="store_true",
        help="–ü–æ–≤—Ç–æ—Ä–Ω–æ –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ –∫–æ–ª–æ–Ω–∫–∏ –ö–∞—Ç–µ–≥–æ—Ä—ñ—è (Q) —Ç–∞ pa_used (AV) –Ω–∞ –æ—Å–Ω–æ–≤—ñ –æ–Ω–æ–≤–ª–µ–Ω–∏—Ö –ø—Ä–∞–≤–∏–ª —É category.csv."
    )

    # ‚ú® –ù–û–í–ò–ô –ê–†–ì–£–ú–ï–ù–¢ –¥–ª—è –∑–≤—ñ—Ä–∫–∏ —à—Ç—Ä–∏—Ö–∫–æ–¥—ñ–≤
    parser.add_argument( # <--- –î–û–î–ê–ù–û
    "--separate-existing",
    action="store_true",
    help="–ó–≤—ñ—Ä–∏—Ç–∏ SL_new.csv –∑ –±–∞–∑–æ—é (zalishki.csv) –∑–∞ —à—Ç—Ä–∏—Ö–∫–æ–¥–æ–º, –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —ñ—Å–Ω—É—é—á—ñ —Ç–æ–≤–∞—Ä–∏ —É SL_old_prod_new_SHK.csv —Ç–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ —ó—Ö –∑ SL_new.csv."
    )

    # ‚ú® –ù–û–í–ò–ô –ê–†–ì–£–ú–ï–ù–¢ –¥–ª—è –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è –Ω–æ–≤–∏—Ö SKU
    parser.add_argument(
    "--assign-sku",
    action="store_true",
    help="–ó–Ω–∞–π—Ç–∏ –Ω–∞–π–±—ñ–ª—å—à–∏–π SKU —É zalishki.csv —Ç–∞ –ø—Ä–∏—Å–≤–æ—ó—Ç–∏ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ SKU –Ω–æ–≤–∏–º —Ç–æ–≤–∞—Ä–∞–º —É SL_new.csv (–∫–æ–ª–æ–Ω–∫–∞ P/15)."
    )

# ‚ú® –ù–û–í–ò–ô –ê–†–ì–£–ú–ï–ù–¢ –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å
    parser.add_argument(
    "--download-images",
    action="store_true",
    help="–ö–æ–º–ø–ª–µ–∫—Å–Ω–∏–π –ø—Ä–æ—Ü–µ—Å: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –∑ URL (B/1) —É –ø–∞–ø–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π (Q/16), –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –∑–∞ SKU (P/15), –æ–Ω–æ–≤–ª–µ–Ω–Ω—è SL_new.csv (R/17) —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è GIF-—Ñ–∞–π–ª—ñ–≤."
    )


    # ‚ú® –ù–û–í–ò–ô –ê–†–ì–£–ú–ï–ù–¢ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É —ñ–º–ø–æ—Ä—Ç—É –Ω–æ–≤–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
    parser.add_argument(
    "--create-import-file",
    action="store_true",
    help="–°—Ç–≤–æ—Ä—é—î —Ñ–∞–π–ª SL_new_prod.csv –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É –Ω–æ–≤–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤, –æ—á–∏—â—É—é—á–∏ –π–æ–≥–æ —Ç–∞ –ø–µ—Ä–µ–Ω–æ—Å—è—á–∏ –¥–∞–Ω—ñ –∑ SL_new.csv."
    )


    # --- –ù–û–í–ê –ö–û–ú–ê–ù–î–ê –î–õ–Ø –û–ù–û–í–õ–ï–ù–ù–Ø –Ü–°–ù–£–Æ–ß–ò–• –¢–û–í–ê–†–Ü–í ---
    parser.add_argument('--update-old-products', 
    action='store_true', 
    help='–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –∑ SL_old_prod_new_SHK.csv —ñ –æ–Ω–æ–≤–∏—Ç–∏ —ñ—Å–Ω—É—é—á—ñ —Ç–æ–≤–∞—Ä–∏ —É –±–∞–∑—ñ.'
    )
    

    # 3. –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
    args = parser.parse_args()

    # 4. –í–∏–±—ñ—Ä —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∑–∞–ø—É—Å–∫—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
    if args.export:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞—é –µ–∫—Å–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä—ñ–≤...")
        export_products()
    elif args.check_version:
        print("üîç –ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –≤–µ—Ä—Å—ñ—ó WooCommerce...")
        check_version()
    elif args.download_supplier:
        print(f"üåê –ó–∞–ø—É—Å–∫–∞—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ –∑ ID {args.download_supplier}...")
        download_supplier_price_list(args.download_supplier)
    elif args.process_supplier_1:
        print("‚öôÔ∏è –ó–∞–ø—É—Å–∫–∞—é –æ–±—Ä–æ–±–∫—É –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ 1...")
        process_supplier_1_price_list()
        # –û–Ω–æ–≤–ª–µ–Ω–∞ –ª–æ–≥—ñ–∫–∞ –¥–ª—è check-csv
    elif args.check_csv:
        print(f"‚öôÔ∏è –ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–µ–≤—ñ—Ä–∫—É CSV-—Ñ–∞–π–ª—É –∑ –ø—Ä–æ—Ñ—ñ–ª–µ–º '{args.check_csv}'...")
        if check_csv_data(args.check_csv):
            print("‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É—Å–ø—ñ—à–Ω–∞. –§–∞–π–ª –≤–∞–ª—ñ–¥–Ω–∏–π.")
        else:
            print("‚ùå –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π—à–ª–∞. –ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –ª–æ–≥-—Ñ–∞–π–ª –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.")
    elif args.process_supplier_2:
        print("‚öôÔ∏è –ó–∞–ø—É—Å–∫–∞—é –æ–±—Ä–æ–±–∫—É –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ 2...")
        process_supplier_2_price_list()
    elif args.process_supplier_3:
        print("‚öôÔ∏è –ó–∞–ø—É—Å–∫–∞—é –æ–±—Ä–æ–±–∫—É –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ 3...")
        process_supplier_3_price_list()
    elif args.combine_tables:
        print("‚öôÔ∏è –ó–∞–ø—É—Å–∫–∞—é —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤–µ–¥–µ–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ...")
        process_and_combine_all_data()
    elif args.prepare_upload:
        print("‚öôÔ∏è –ó–∞–ø—É—Å–∫–∞—é –ø—ñ–¥–≥–æ—Ç–æ–≤–∫—É —Ñ–∞–π–ª—É –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞ —Å–∞–π—Ç...")
        prepare_for_website_upload()
    elif args.update_products: 
        print("üì¶ –ó–∞–ø—É—Å–∫–∞—é –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–∞ —Å–∞–π—Ç—ñ...")
        # –¢–ï–ü–ï–† –ú–ò –ü–ï–†–ï–î–ê–Ñ–ú–û –ó–ù–ê–ß–ï–ù–ù–Ø –ê–†–ì–£–ú–ï–ù–¢–£ –î–û –§–£–ù–ö–¶–Ü–á update_products
        update_products(str(args.update_products))
    
        
    # ‚ú® –ù–æ–≤–∞ –ª–æ–≥—ñ–∫–∞ –¥–ª—è –ø–æ—à—É–∫—É –Ω–æ–≤–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤
    elif args.find_new_products:
        print("üîç –ó–∞–ø—É—Å–∫–∞—é –ø–æ—à—É–∫ –Ω–æ–≤–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤...")
        find_new_products()
    
    # ‚ú® –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π elif –±–ª–æ–∫ –¥–ª—è –∑–∞–ø—É—Å–∫—É –Ω–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
    elif args.find_product_data:
        print("üîç –ó–∞–ø—É—Å–∫–∞—é –ø–æ—à—É–∫ –¥–∞–Ω–∏—Ö –ø—Ä–æ —Ç–æ–≤–∞—Ä–∏...")
        find_product_data()

    elif args.parse_attributes:
        print("‚öôÔ∏è –ó–∞–ø—É—Å–∫–∞—é –ø–∞—Ä—Å–∏–Ω–≥ –∞—Ç—Ä–∏–±—É—Ç—ñ–≤...")
        parse_product_attributes()

    # ‚ú® –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π elif –±–ª–æ–∫ –¥–ª—è —Ñ—ñ–Ω–∞–ª—å–Ω–æ—ó —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü—ñ—ó
    elif args.standardize_final:
        print("‚úÖ –ó–∞–ø—É—Å–∫–∞—é —Ñ—ñ–Ω–∞–ª—å–Ω—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü—ñ—é SL_new.csv...")
        apply_final_standardization()

    # ‚ú® –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π elif –±–ª–æ–∫ –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    elif args.fill_categories:
        print("üóÇÔ∏è –ó–∞–ø—É—Å–∫–∞—é –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π...")
        fill_product_category()
   
    # ‚ú® –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π elif –±–ª–æ–∫ –¥–ª—è –ü–û–í–¢–û–†–ù–û–ì–û –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è
    elif args.refill_category: # <--- –î–û–î–ê–ù–û
        print("üîÑ –ó–∞–ø—É—Å–∫–∞—é –ø–æ–≤—Ç–æ—Ä–Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–∞ pa_used...")
        refill_product_category()

    # ‚ú® –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π elif –±–ª–æ–∫ –¥–ª—è –∑–≤—ñ—Ä–∫–∏ —Ç–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è
    elif args.separate_existing: # <--- –î–û–î–ê–ù–û
        print("üîç –ó–∞–ø—É—Å–∫–∞—é –∑–≤—ñ—Ä–∫—É —à—Ç—Ä–∏—Ö–∫–æ–¥—ñ–≤ –∑ –±–∞–∑–æ—é —Ç–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤...")
        separate_existing_products()

    # ‚ú® –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π elif –±–ª–æ–∫ –¥–ª—è –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è SKU
    elif args.assign_sku:
        print("üî¢ –ó–∞–ø—É—Å–∫–∞—é –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è –Ω–æ–≤–∏—Ö SKU...")
        assign_new_sku_to_products()


    # ‚ú® –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π elif –±–ª–æ–∫ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å
    elif args.download_images:
        print("üñºÔ∏è –ó–∞–ø—É—Å–∫–∞—é –∫–æ–º–ø–ª–µ–∫—Å–Ω–∏–π –ø—Ä–æ—Ü–µ—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è, –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è —Ç–∞ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å...")
        download_images_for_product()

    # ‚ú® –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π elif –±–ª–æ–∫ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É —ñ–º–ø–æ—Ä—Ç—É
    elif args.create_import_file:
        print("üìã –ó–∞–ø—É—Å–∫–∞—é —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É SL_new_prod.csv...")
        create_new_products_import_file()

    # --- –ù–û–í–ò–ô –í–ò–ö–õ–ò–ö ---
    if args.update_old_products:
        print("‚¨ÜÔ∏è –ü–æ—á–∏–Ω–∞—é –ø–∞–∫–µ—Ç–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤...")
        update_existing_products_batch()

    else:
        # –Ø–∫—â–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ, –≤–∏–≤–µ—Å—Ç–∏ –¥–æ–≤—ñ–¥–∫—É
        print("‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ –∂–æ–¥–Ω–æ—ó –¥—ñ—ó. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ -h –∞–±–æ --help –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏.")
        parser.print_help()


if __name__ == "__main__":
    main()